type Query {
    hello(name: String) :String!
    getTodos: [Todo]!
    getTodoById(id: Int): Todo!
    getUserId(id: Int):User!
  }

  enum TodoSatusEnum {
    WAITING
    IN_PROGRESS
    CANCELED
    DONE
  }

  type Todo {
    id: ID!
    name: String!
    content: String!
    status: TodoSatusEnum!
    user: User!
  }

  type User {
    id: ID!
    name: String!
    email: String!
    todos: [Todo]
  }

  type Mutation {
    addTodo(TodoAddInput: TodoAddInput): Todo!
    updateTodo( id: Int!, updateTodoInput: updateTodoInput): Todo!
    deleteTodo( id: Int!):Todo!
  }

  input TodoAddInput {
    name: String!
    content: String!
    userId: Int! 
  }

  input updateTodoInput {
    name: String
    content: String
    userId: Int
    status: TodoSatusEnum
  }



